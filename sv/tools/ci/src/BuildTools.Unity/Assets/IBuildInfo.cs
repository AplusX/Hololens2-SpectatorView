// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

using System;
using System.Collections.Generic;
using UnityEditor;
using UnityEditor.Build.Reporting;
using UnityEngine;

namespace Microsoft.MixedReality.BuildTools.Unity
{
    /// <summary>
    /// The Build Info defines common properties for a build.
    /// </summary>
    public interface IBuildInfo
    {
        /// <summary>
        /// The directory to put the final build output.
        /// </summary>
        /// <remarks>
        /// Defaults to "<see href="https://docs.unity3d.com/ScriptReference/Application-dataPath.html">Application.dataPath</see>/Builds/Platform Target/"
        /// </remarks>
        string OutputDirectory { get; set; }

        /// <summary>
        /// The list of scenes to include in the build.
        /// </summary>
        IEnumerable<string> Scenes { get; set; }

        /// <summary>
        /// The build target.
        /// </summary>
        BuildTarget BuildTarget { get; }

        /// <summary>
        /// The build target.
        /// </summary>
        BuildTargetGroup BuildTargetGroup { get; }

        /// <summary>
        /// Optional parameter to set the player's <see cref="ColorSpace"/>
        /// </summary>
        ColorSpace? ColorSpace { get; set; }

        /// <summary>
        /// Optional parameter to set the scripting backend
        /// </summary>
        ScriptingImplementation? ScriptingBackend { get; set; }

        /// <summary>
        /// Build options to include in the Unity player build pipeline.
        /// </summary>
        BuildOptions BuildOptions { get; }
        
        /// <summary>
        /// The current build architecture, 0 - None, 1 - ARM64, 2 - Universal
        /// </summary>
        int Architecture { get; }

        /// <summary>
        /// Preprocessor directives to define in the PlayerSettings (Note: these should be separated by semicolons with no spaces)
        /// </summary>
        string Defines { get; set; }

        /// <summary>
        /// The default location of log files generated by sub-processes of the build system.
        /// </summary>
        /// <remarks>
        /// Note that this different from the Unity flag -logFile, which controls the location
        /// of the Unity log file. This is specifically for logs generated by other processes
        /// that the MRTK build tools produces (for example, when msbuild.exe is involved)
        /// </remarks>
        string LogDirectory { get; set; }
    }
}