# =============== #
# Unity generated #
# =============== #
[Tt]emp/
[Oo]bj/
[Bb]in/
[Bb]uilds/
[Bb]uild/
[Ll]ibrary/
[Aa]pp/
UWP/
WindowsStoreApp/
WSA/
UnityGenerated/
UnityPackageManager/
.out/
project.json
project.lock.json
*.package

# ============ #
# Certificates #
# ============ #
*.cert
*.privkey
*.pfx
*.pfx.meta

# ===================================== #
# Visual Studio / MonoDevelop generated #
# ===================================== #
.vs/
ExportedObj/
obj/
*.svd
*.userprefs
/*.csproj
*.csproj
*.pidb
*.suo
/*.sln
*.sln
*.user
*.unityproj
*.ipch
*.opensdf
*.sdf
*.tlog
*.log
*.idb
*.opendb

# ============================ #
# Visual Studio Code Generated #
# ============================ #
.vscode/

# ===================== #
# Project Specific List #
# ===================== #
artifacts/
Assets/ThirdParty/
Assets/ThirdParty.meta
Assets/TextMesh Pro.meta
Assets/TextMesh Pro/
--Version/
Assets/StreamingAssets/GltfModels/
Assets/StreamingAssets/GltfModels.meta
Assets/StreamingAssets.meta

/mrtk_log_mostRecentET.csv

# =============== #
# DocFX Generated #
# =============== #
doc/

# This is only needed because docfx chooses the first alphabetically occurring
# .cs file's folder to create an obj/xdoc cache folder inside.
# When https://github.com/dotnet/docfx/issues/1156 is addressed, it should be
# possible to remove the rule on the following line and update our docfx
# configuration to place its cache in a deterministic folder.
[Oo]bj.meta

# ============================= #
# NuGet Build Process Generated #
# ============================= #
/NuGet/*
!/NuGet/BuildSource.proj
/MRTKBuild/
/MSBuild/
/PackagesCopy/
!/scripts/Packaging/NuGetRestoreProject.csproj
